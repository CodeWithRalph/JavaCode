/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 * @author Ralph Uy
 * @version 1.0
 * @since 2024-01-29
 */
package com.mycompany.assignment01;

import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Ralph Uy
 */
public class AssignmentForm01 extends javax.swing.JFrame {

    // assign button in a button matrix
    JButton[][] jButtonMatrix = new JButton[8][8];
    // store variable player color
    String[] playerColor = new String[3];
    boolean isGameStart = false;
    int playerTurn = 0; // 0-first player, 1-second player, 2-for third player
    int totalTurns = 0; // counter for when the board is full
    // set a default button color other than the Red Orange Green
    Color defaultButtonColor = new java.awt.Color(214, 217, 223);

    /**
     * Creates new form AssignmentForm01
     */
    public AssignmentForm01() {
        initComponents();
        initButtonMatrix();
        resetGameBoard();
    }

    /*
    resetGameBoard - Resets the game board in the state that the game has not started
    @param - null
    @return - null
     */
    private void resetGameBoard() {
        initButtonStringMatrix();
        clearButtonColors();
        isGameStart = false;
        playerTurn = 0;
        totalTurns = 0;
        jButtonGame.setText("Start Game");
        // allow players to choose color again
        jComboBoxEnable(true);
        // disables all the buttons
        setButtonEnable(false);
        // Game info back to default text
        jLabelGameInfo.setText("Players choose color before playing the game.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButtonGame = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton62 = new javax.swing.JButton();
        jButton63 = new javax.swing.JButton();
        jButton64 = new javax.swing.JButton();
        jLabelGameInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new java.awt.GridLayout(3, 1));

        jPanel4.setLayout(new java.awt.GridLayout(1, 3));

        jLabel1.setText("Player 1");
        jPanel4.add(jLabel1);

        jLabel2.setText("Player 2");
        jPanel4.add(jLabel2);

        jLabel3.setText("Player 3");
        jPanel4.add(jLabel3);

        jPanel3.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(1, 3));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Red", "Orange", "Green" }));
        jPanel5.add(jComboBox1);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Orange", "Red", "Green" }));
        jPanel5.add(jComboBox2);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Green", "Red", "Orange" }));
        jPanel5.add(jComboBox3);

        jPanel3.add(jPanel5);

        jButtonGame.setText("Start Game");
        jButtonGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gameButtonClick(evt);
            }
        });
        jPanel3.add(jButtonGame);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(8, 8));

        jButton1.setEnabled(false);
        jButton1.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton1.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton1.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setEnabled(false);
        jButton2.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton2.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton2.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton3.setEnabled(false);
        jButton3.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton3.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton3.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton4.setEnabled(false);
        jButton4.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton4.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton4.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton4);

        jButton5.setEnabled(false);
        jButton5.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton5.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton5.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton5);

        jButton6.setEnabled(false);
        jButton6.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton6.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton6.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton6);

        jButton7.setEnabled(false);
        jButton7.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton7.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton7.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton7);

        jButton8.setEnabled(false);
        jButton8.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton8.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton8.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton8);

        jButton9.setEnabled(false);
        jButton9.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton9.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton9.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton9);

        jButton10.setEnabled(false);
        jButton10.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton10.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton10.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton10);

        jButton11.setEnabled(false);
        jButton11.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton11.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton11.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton11);

        jButton12.setEnabled(false);
        jButton12.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton12.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton12.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton12);

        jButton13.setEnabled(false);
        jButton13.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton13.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton13.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton13);

        jButton14.setEnabled(false);
        jButton14.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton14.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton14.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton14);

        jButton15.setEnabled(false);
        jButton15.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton15.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton15.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton15);

        jButton16.setEnabled(false);
        jButton16.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton16.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton16.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton16);

        jButton17.setEnabled(false);
        jButton17.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton17.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton17.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton17);

        jButton18.setEnabled(false);
        jButton18.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton18.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton18.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton18);

        jButton19.setEnabled(false);
        jButton19.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton19.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton19.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton19);

        jButton20.setEnabled(false);
        jButton20.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton20.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton20.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton20);

        jButton21.setEnabled(false);
        jButton21.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton21.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton21.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton21);

        jButton22.setEnabled(false);
        jButton22.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton22.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton22.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton22);

        jButton23.setEnabled(false);
        jButton23.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton23.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton23.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton23);

        jButton24.setEnabled(false);
        jButton24.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton24.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton24.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton24);

        jButton25.setEnabled(false);
        jButton25.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton25.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton25.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton25);

        jButton26.setEnabled(false);
        jButton26.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton26.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton26.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton26);

        jButton27.setEnabled(false);
        jButton27.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton27.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton27.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton27);

        jButton28.setEnabled(false);
        jButton28.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton28.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton28.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton28);

        jButton29.setEnabled(false);
        jButton29.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton29.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton29.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton29);

        jButton30.setEnabled(false);
        jButton30.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton30.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton30.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton30);

        jButton31.setEnabled(false);
        jButton31.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton31.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton31.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton31);

        jButton32.setEnabled(false);
        jButton32.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton32.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton32.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton32);

        jButton33.setEnabled(false);
        jButton33.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton33.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton33.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton33);

        jButton34.setEnabled(false);
        jButton34.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton34.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton34.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton34);

        jButton35.setEnabled(false);
        jButton35.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton35.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton35.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton35);

        jButton36.setEnabled(false);
        jButton36.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton36.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton36.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton36);

        jButton37.setEnabled(false);
        jButton37.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton37.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton37.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton37);

        jButton38.setEnabled(false);
        jButton38.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton38.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton38.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton38);

        jButton39.setEnabled(false);
        jButton39.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton39.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton39.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton39);

        jButton40.setEnabled(false);
        jButton40.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton40.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton40.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton40);

        jButton41.setEnabled(false);
        jButton41.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton41.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton41.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton41);

        jButton42.setEnabled(false);
        jButton42.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton42.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton42.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton42);

        jButton43.setEnabled(false);
        jButton43.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton43.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton43.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton43);

        jButton44.setEnabled(false);
        jButton44.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton44.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton44.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton44);

        jButton45.setEnabled(false);
        jButton45.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton45.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton45.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton45);

        jButton46.setEnabled(false);
        jButton46.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton46.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton46.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton46);

        jButton47.setEnabled(false);
        jButton47.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton47.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton47.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton47);

        jButton48.setEnabled(false);
        jButton48.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton48.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton48.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton48);

        jButton49.setEnabled(false);
        jButton49.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton49.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton49.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton49);

        jButton50.setEnabled(false);
        jButton50.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton50.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton50.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton50);

        jButton51.setEnabled(false);
        jButton51.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton51.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton51.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton51);

        jButton52.setEnabled(false);
        jButton52.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton52.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton52.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton52.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton52);

        jButton53.setEnabled(false);
        jButton53.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton53.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton53.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton53);

        jButton54.setEnabled(false);
        jButton54.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton54.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton54.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton54.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton54);

        jButton55.setEnabled(false);
        jButton55.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton55.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton55.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton55);

        jButton56.setEnabled(false);
        jButton56.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton56.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton56.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton56.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton56);

        jButton57.setEnabled(false);
        jButton57.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton57.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton57.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton57);

        jButton58.setEnabled(false);
        jButton58.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton58.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton58.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton58.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton58);

        jButton59.setEnabled(false);
        jButton59.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton59.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton59.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton59);

        jButton60.setEnabled(false);
        jButton60.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton60.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton60.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton60);

        jButton61.setEnabled(false);
        jButton61.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton61.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton61.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton61);

        jButton62.setEnabled(false);
        jButton62.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton62.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton62.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton62.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton62);

        jButton63.setEnabled(false);
        jButton63.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton63.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton63.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton63);

        jButton64.setEnabled(false);
        jButton64.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton64.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton64.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClicked(evt);
            }
        });
        jPanel2.add(jButton64);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jLabelGameInfo.setText("Players choose color before playing the game");
        jLabelGameInfo.setMaximumSize(new java.awt.Dimension(242, 20));
        jLabelGameInfo.setMinimumSize(new java.awt.Dimension(242, 20));
        jLabelGameInfo.setPreferredSize(new java.awt.Dimension(242, 20));
        getContentPane().add(jLabelGameInfo, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    gameButtonClick() - game button allows to start and cancel the game
     */
    private void gameButtonClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gameButtonClick
        // start game block and allow to click to buttons
        if (isGameStart == false) {
            // checkPlayers checks if colors of each player is unique
            boolean isGameAllowed = checkPlayers();
            // if game is not allowed, return and do nothing
            if (isGameAllowed) {
                setButtonEnable(true);
                jButtonGame.setText("Cancel Game");
                isGameStart = true;
            }
        } // end game block
        else {
            // clear routine from here
            resetGameBoard();
        }
    }//GEN-LAST:event_gameButtonClick

    /*
    setButtonEnable() - enables or disables all the colored buttons on the board
     */
    private void setButtonEnable(boolean logic) {
        // enable all buttons after clicking the Start Game button
        for (int col = 0; col < 8; col++) {
            for (int row = 0; row < 8; row++) {
                jButtonMatrix[col][row].setEnabled(logic);
            }
        }
    }

    /*
    jComboBoxEnable() - enables or disables the three combo boxes
                      - enabled before starting the game
                      - disabled during the game
     */
    private void jComboBoxEnable(boolean logic) {
        // make jcombobox editable again
        jComboBox1.setEnabled(logic);
        jComboBox2.setEnabled(logic);
        jComboBox3.setEnabled(logic);
    }

    /*
    jButtonClicked() - all colored game button behavior are being listened here
                     - captured the button click of any colored game buttons
     */
    private void jButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClicked
        if (isGameStart == true) {
            // get current color
            JButton currentButton = (JButton) evt.getSource();
            boolean isDefaultColor = currentButton.getBackground().equals(defaultButtonColor);
            // allow click to button if button was not clicked before
            if (isDefaultColor) {
                // change the color of the button according to players turn
                Color currentColor = defaultButtonColor;
                String currentColorString = "";
                switch (playerColor[playerTurn]) {
                    case "Red":
                        // Assigns the Red color to the current button
                        currentColor = Color.RED;
                        currentColorString = "R";
                        break;
                    case "Orange":
                        // Assigns the Orange color to the current button
                        currentColor = Color.ORANGE;
                        currentColorString = "O";
                        break;
                    case "Green":
                        // Assigns the Green color to the current button
                        currentColor = Color.GREEN;
                        currentColorString = "G";
                        break;
                    default:
                        break;
                }
                currentButton.setBackground(currentColor);
                currentButton.setForeground(currentColor);
                currentButton.setText(currentColorString);

                // next player turn
                playerTurn++;
                // Loopback to player 1 turn after player 3
                if (playerTurn > 2) {
                    playerTurn = 0;
                }
                // change the game info label text who turn is next
                currentTurnInfo();

                // check if there is a winner
                checkWinner();
            }
        }
    }//GEN-LAST:event_jButtonClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignmentForm01().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonGame;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelGameInfo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables

    /*
    initButtonMatrix() - creates a matrixVariable for all the colored game buttons
     */
    private void initButtonMatrix() {
        // Button Matrix Code
        jButtonMatrix[0][0] = jButton1;
        jButtonMatrix[0][1] = jButton2;
        jButtonMatrix[0][2] = jButton3;
        jButtonMatrix[0][3] = jButton4;
        jButtonMatrix[0][4] = jButton5;
        jButtonMatrix[0][5] = jButton6;
        jButtonMatrix[0][6] = jButton7;
        jButtonMatrix[0][7] = jButton8;
        jButtonMatrix[1][0] = jButton9;
        jButtonMatrix[1][1] = jButton10;
        jButtonMatrix[1][2] = jButton11;
        jButtonMatrix[1][3] = jButton12;
        jButtonMatrix[1][4] = jButton13;
        jButtonMatrix[1][5] = jButton14;
        jButtonMatrix[1][6] = jButton15;
        jButtonMatrix[1][7] = jButton16;
        jButtonMatrix[2][0] = jButton17;
        jButtonMatrix[2][1] = jButton18;
        jButtonMatrix[2][2] = jButton19;
        jButtonMatrix[2][3] = jButton20;
        jButtonMatrix[2][4] = jButton21;
        jButtonMatrix[2][5] = jButton22;
        jButtonMatrix[2][6] = jButton23;
        jButtonMatrix[2][7] = jButton24;
        jButtonMatrix[3][0] = jButton25;
        jButtonMatrix[3][1] = jButton26;
        jButtonMatrix[3][2] = jButton27;
        jButtonMatrix[3][3] = jButton28;
        jButtonMatrix[3][4] = jButton29;
        jButtonMatrix[3][5] = jButton30;
        jButtonMatrix[3][6] = jButton31;
        jButtonMatrix[3][7] = jButton32;
        jButtonMatrix[4][0] = jButton33;
        jButtonMatrix[4][1] = jButton34;
        jButtonMatrix[4][2] = jButton35;
        jButtonMatrix[4][3] = jButton36;
        jButtonMatrix[4][4] = jButton37;
        jButtonMatrix[4][5] = jButton38;
        jButtonMatrix[4][6] = jButton39;
        jButtonMatrix[4][7] = jButton40;
        jButtonMatrix[5][0] = jButton41;
        jButtonMatrix[5][1] = jButton42;
        jButtonMatrix[5][2] = jButton43;
        jButtonMatrix[5][3] = jButton44;
        jButtonMatrix[5][4] = jButton45;
        jButtonMatrix[5][5] = jButton46;
        jButtonMatrix[5][6] = jButton47;
        jButtonMatrix[5][7] = jButton48;
        jButtonMatrix[6][0] = jButton49;
        jButtonMatrix[6][1] = jButton50;
        jButtonMatrix[6][2] = jButton51;
        jButtonMatrix[6][3] = jButton52;
        jButtonMatrix[6][4] = jButton53;
        jButtonMatrix[6][5] = jButton54;
        jButtonMatrix[6][6] = jButton55;
        jButtonMatrix[6][7] = jButton56;
        jButtonMatrix[7][0] = jButton57;
        jButtonMatrix[7][1] = jButton58;
        jButtonMatrix[7][2] = jButton59;
        jButtonMatrix[7][3] = jButton60;
        jButtonMatrix[7][4] = jButton61;
        jButtonMatrix[7][5] = jButton62;
        jButtonMatrix[7][6] = jButton63;
        jButtonMatrix[7][7] = jButton64;
    }

    /*
    initButtonStringMatrix() - Initializes each JButton to have an empty string
    @param - null
    @return - null
     */
    private void initButtonStringMatrix() {
        for (int col = 0; col < 8; col++) {
            for (int row = 0; row < 8; row++) {
                jButtonMatrix[col][row].setText(" ");
            }
        }
    }

    /*
    currentTurnInfo() - Sets the text to jLabelGameInfo indicating whose turn is it
    @param - null
    @return - null
     */
    private void currentTurnInfo() {
        String currentColor = playerColor[playerTurn];
        // playerTurn + 1 because of '0-first player, 1-second player, 2-for third player'
        jLabelGameInfo.setText("Player " + (playerTurn + 1) + " : " + currentColor + " turn");
    }

    /*
    checkPlayers() - Checks the player if each has unique color.
                   - Gives a popup message if some players have the same colors
    @param - null
    @return - boolean logic if game is allowed or not
     */
    private boolean checkPlayers() {
        boolean isGameAllowed = false;
        String p1Color, p2Color, p3Color;
        p1Color = playerColor[0] = jComboBox1.getSelectedItem().toString();
        p2Color = playerColor[1] = jComboBox2.getSelectedItem().toString();
        p3Color = playerColor[2] = jComboBox3.getSelectedItem().toString();
        // check if p1 p2 and p3 are not the same
        if (!(p1Color.equals(p2Color) || p1Color.equals(p3Color) || p2Color.equals(p3Color))) {
            isGameAllowed = true;
            // make jcombo boxes not editable
            jComboBoxEnable(false);
            currentTurnInfo();
        }// add a popup window to inform players to have unique colors
        else {
            JOptionPane.showMessageDialog(this, "Players much choose unique colors!");
        }
        return isGameAllowed;
    }

    /*
    checkWinner() - Checks all the winning combination on the board if someone wins the game
    @param - null
    @return - null
     */
    private void checkWinner() {
        String winnerPattern = "";

        // plus one to the total turns
        totalTurns++;

        // check matrix patterns if there is a winner
        winnerPattern += checkWinnerByRow();

        winnerPattern += checkWinnerByColumn();

        winnerPattern += checkWinnerByDiagonalUpRight();

        winnerPattern += checkWinnerByDiagonalUpLeft();

        // check if there is a winning string pattern
        if (winnerPattern.contains("RRRR")
                || winnerPattern.contains("OOOO")
                || winnerPattern.contains("GGGG")) {
            String winnerColor;
            if (winnerPattern.contains("RRRR")) {
                winnerColor = "Red";
            } else if (winnerPattern.contains("OOOO")) {
                winnerColor = "Orange";
            } else {
                winnerColor = "Green";
            }
            String winnerMessage = winnerColor + " wins!";
            jLabelGameInfo.setText(winnerMessage);
            JOptionPane.showMessageDialog(this, winnerMessage + " Press OK to play again.");
            resetGameBoard();
        }

        // check turn if 64 then display no winner
        if (totalTurns == 64) {
            jLabelGameInfo.setText("Nobody wins!");
            JOptionPane.showMessageDialog(this, "Good game. Nobody wins. Press OK to play again.");
            resetGameBoard();
        }
    }

    /*
    checkWinnerByDiagonalUpLeft() - checks the pattern if someone wins
                                  - by diagonal in up left direction
    @param - null
    @return - String pattern from the board by diagonal up left
     */
    private String checkWinnerByDiagonalUpLeft() {
        String pattern = "";
        // check diagonal up left direction winner
        int[][] upLeftCoordinates = new int[9][3];
        // first up left diagonal (row 3, col 7, 4 steps)
        upLeftCoordinates[0][0] = 3;
        upLeftCoordinates[0][1] = 7;
        upLeftCoordinates[0][2] = 4;
        // second up left diagonal (row 4, col 7, 5 steps)
        upLeftCoordinates[1][0] = 4;
        upLeftCoordinates[1][1] = 7;
        upLeftCoordinates[1][2] = 5;
        // third up left diagonal (row 5, col 7, 6 steps)
        upLeftCoordinates[2][0] = 5;
        upLeftCoordinates[2][1] = 7;
        upLeftCoordinates[2][2] = 6;
        // fourth up left diagonal (row 6, col 7, 7 steps)
        upLeftCoordinates[3][0] = 6;
        upLeftCoordinates[3][1] = 7;
        upLeftCoordinates[3][2] = 7;
        // fifth up left diagonal (row 7, col 7, 8 steps)
        upLeftCoordinates[4][0] = 7;
        upLeftCoordinates[4][1] = 7;
        upLeftCoordinates[4][2] = 8;
        // sixth up left diagonal (row 7, col 6, 7 steps)
        upLeftCoordinates[5][0] = 7;
        upLeftCoordinates[5][1] = 6;
        upLeftCoordinates[5][2] = 7;
        // seventh up left diagonal (row 7, col 5, 6 steps)
        upLeftCoordinates[6][0] = 7;
        upLeftCoordinates[6][1] = 5;
        upLeftCoordinates[6][2] = 6;
        // eigth up left diagonal (row 7, col 4, 5 steps)
        upLeftCoordinates[7][0] = 7;
        upLeftCoordinates[7][1] = 4;
        upLeftCoordinates[7][2] = 5;
        // ninth up left diagonal (row 7, col 3, 4 steps)
        upLeftCoordinates[8][0] = 7;
        upLeftCoordinates[8][1] = 3;
        upLeftCoordinates[8][2] = 4;
        // up left diagonal loop
        for (int item = 0; item < 9; item++) {
            int rowPos = upLeftCoordinates[item][0];
            int colPos = upLeftCoordinates[item][1];
            int steps = upLeftCoordinates[item][2];
            while (steps > 0) {
                pattern += jButtonMatrix[rowPos][colPos].getText();
                rowPos--;
                colPos--;
                steps--;
            }
            pattern += ".";
        }
        return pattern;
    }

    /*
    checkWinnerByDiagonalUpRight() - checks the pattern if someone wins
                                   - by diagonal in up right direction
    @param - null
    @return - String pattern from the board by diagonal up right
     */
    private String checkWinnerByDiagonalUpRight() {
        String pattern = "";
        // check diagonal up right direction winner
        int[][] upRightCoordinates = new int[9][3];
        // first up right diagonal (row 3, col 0, 4 steps)
        upRightCoordinates[0][0] = 3;
        upRightCoordinates[0][1] = 0;
        upRightCoordinates[0][2] = 4;
        // second up right diagonal (row 4, col 0, 5 steps)
        upRightCoordinates[1][0] = 4;
        upRightCoordinates[1][1] = 0;
        upRightCoordinates[1][2] = 5;
        // third up right diagonal (row 5, col 0, 6 steps)
        upRightCoordinates[2][0] = 5;
        upRightCoordinates[2][1] = 0;
        upRightCoordinates[2][2] = 6;
        // fourth up right diagonal (row 6, col 0, 7 steps)
        upRightCoordinates[3][0] = 6;
        upRightCoordinates[3][1] = 0;
        upRightCoordinates[3][2] = 7;
        // fifth up right diagonal (row 7, col 0, 8 steps)
        upRightCoordinates[4][0] = 7;
        upRightCoordinates[4][1] = 0;
        upRightCoordinates[4][2] = 8;
        // sixth up right diagonal (row 7, col 1, 7 steps)
        upRightCoordinates[5][0] = 7;
        upRightCoordinates[5][1] = 1;
        upRightCoordinates[5][2] = 7;
        // seventh up right diagonal (row 7, col 2, 6 steps)
        upRightCoordinates[6][0] = 7;
        upRightCoordinates[6][1] = 2;
        upRightCoordinates[6][2] = 6;
        // eigth up right diagonal (row 7, col 3, 5 steps)
        upRightCoordinates[7][0] = 7;
        upRightCoordinates[7][1] = 3;
        upRightCoordinates[7][2] = 5;
        // ninth up right diagonal (row 7, col 4, 4 steps)
        upRightCoordinates[8][0] = 7;
        upRightCoordinates[8][1] = 4;
        upRightCoordinates[8][2] = 4;
        // up right diagonal loop
        for (int item = 0; item < 9; item++) {
            int rowPos = upRightCoordinates[item][0];
            int colPos = upRightCoordinates[item][1];
            int steps = upRightCoordinates[item][2];
            while (steps > 0) {
                pattern += jButtonMatrix[rowPos][colPos].getText();
                rowPos--;
                colPos++;
                steps--;
            }
            pattern += ".";
        }
        return pattern;
    }

    /*
    checkWinnerByColumn() - checks the pattern if someone wins by column
    @param - null
    @return - String pattern from the board by column
     */
    private String checkWinnerByColumn() {
        String pattern = "";
        for (int col = 0; col < 8; col++) {
            for (int row = 0; row < 8; row++) {
                pattern += jButtonMatrix[row][col].getText();
            }
            pattern += ".";
        }
        return pattern;
    }

    /*
    checkWinnerByRow() - checks the pattern if someone wins by row
    @param - null
    @return - String pattern from the board by row
     */
    private String checkWinnerByRow() {
        String pattern = "";
        // check row winner
        for (int row = 0; row < 8; row++) {
            for (int col = 0; col < 8; col++) {
                pattern += jButtonMatrix[row][col].getText();
            }
            pattern += ".";
        }
        return pattern;
    }

    /*
    clearButtonColors() - initialize the colored game buttons to default color
    @param - null
    @return - null
     */
    private void clearButtonColors() {
        for (int col = 0; col < 8; col++) {
            for (int row = 0; row < 8; row++) {
                jButtonMatrix[col][row].setBackground(defaultButtonColor);
            }
        }
    }
}
